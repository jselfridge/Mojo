
module servo_hw (

  // 50MHz clock input
  input clk, 

  // Input from reset button (active low)
  input rst_n, 

  // cclk input from AVR, high when AVR is ready
  cclk, 

  // Outputs to the 8 onboard LEDs
  output[7:0] led,

  // AVR SPI connections
  output spi_miso, 
  input  spi_ss,
  input  spi_mosi, 
  input  spi_sck, 

  // AVR ADC channel select
  output[3:0] spi_channel, 

  // Serial connections
  input  avr_tx,      // AVR Tx => FPGA Rx
  output avr_rx,      // AVR Rx => FPGA Tx
  input  avr_rx_busy, // AVR Rx buffer is full

  // Servo connection
  output servo

  );

  // Make reset active high
  wire rst = ~rst_n;

  // These sugnals should be high-z when not in use
  assign spi_miso     = 1’bz;
  assign avr_rx       = 1’bz;
  assign spi_channel  = 4’bzzzz;

  // Manipulate LEDs
  assign led = 8’b0;

  wire [7:0] servo_position;

  counter #(.CTR_LEN(28)) servoCounter (
    .clk(clk),
    .rst(rst),
    .value(servo_position)
  );
   
  servo myServoController (
    .clk(clk),
    .rst(rst),
    .position(servo_position),
    .servo(servo)
  );

endmodule


